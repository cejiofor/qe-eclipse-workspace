package com.platform.servlet_class_demo.dao;

import java.util.List;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.platform.servlet_class_demo.models.Student;

//Student Data Access Object Class
public class StudentDAO {
	
	public void testConnection() {
		MariaDBConnection mariadbConnection = new MariaDBConnection();
		try {
			mariadbConnection.getConnection();
			System.out.println("Connected to MariaDB!");
		}
		catch(Exception e) {
			System.out.println("Database connection failed.");
		}
		
	}
	
	/* Insert method, taking student construtor args to creaate student, add to table, and retrun arraylist of students
	 * public void createStudent(String name, String email, String course) throws SQLException, ClassNotFoundException, IOException {
		ArrayList<Student> studentList = new ArrayList<>();
		
		// Create a new instance of the student class
		Student newStudent = new Student();
		newStudent.setName(name);
		newStudent.setEmail(email);
		newStudent.setCourseSelected(course);
		
		// Create an instance of the mariaDB connection
		MariaDBConnection mariaDB = new MariaDBConnection();
		
		// Create a connection to the mariaDB database
		Connection sqlConnect = null;
		PreparedStatement insertStmt = null;
		String sqlQuery = null;
		String studentQuery = null;
		Statement newQuery = null;
		ResultSet results = null;
		
		try {
			sqlConnect = mariaDB.getConnection();
			// SQL query to be run to receive data from SQL table
			sqlQuery = "INSERT INTO students (name, email, course_selected) values (?, ?, ?)";
			
			// Statement needed to run the sql query
			insertStmt = sqlConnect.prepareStatement(sqlQuery);

			// Set parameters for the prepared statement
			insertStmt.setString(1, name);
			insertStmt.setString(2, email);
			insertStmt.setString(3, course);
			
			
			// run the sql query and return the results to a ResultSet variable
			insertStmt.executeUpdate();
			
			//Check and return updated list of students
			// SQL query to be run to receive data from SQL table
			studentQuery = "SELECT * FROM Students";
			
			// Statement needed to run the sql query
			newQuery = sqlConnect.createStatement();
			
			// run the sql query and return the results to a ResultSet variable
			results = newQuery.executeQuery(studentQuery);
			
			// iterate through the java result set and set student properties from ArrayList properties
			while (results.next())
			{
				Student student = new Student();
				student.setStudentId(results.getInt("student_id"));
				student.setName(results.getString("name"));
				student.setEmail(results.getString("email"));
				student.setCourseSelected(results.getString("course_selected"));
				studentList.add(student);
				System.out.println(student.toString());
			}
			 
			sqlConnect.close();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
	} */
	
	// CREATE -> REGISTER USER, RETURN USER ID FOR NEW USER
	public Integer createStudent(Student student) throws SQLException, ClassNotFoundException, IOException {		
		// Create an instance of the mariaDB connection
		MariaDBConnection mariaDB = new MariaDBConnection();
		
		// Declare variables needed to manage connection and read data
		Connection sqlConnect = null;
		PreparedStatement insertStmt = null;
//		String studentQuery = null;
		ResultSet results = null;
		
		// SQL query to be run to add student data to SQL table
		String insertString = "INSERT INTO students (name, email, course_selected) values (?, ?, ?)";
		
		//Variables needed to retrieve new student primary key from table
		int ID = -1;
		String[] COL = {"student_id"};
				
		
		try {
			sqlConnect = mariaDB.getConnection();
			
			// Statement needed to run the sql query
			insertStmt = sqlConnect.prepareStatement(insertString, COL);

			// Set parameters for the prepared statement
			insertStmt.setString(1, student.getName());
			insertStmt.setString(2, student.getEmail());
			insertStmt.setString(3, student.getCourseSelected());
			

			// run the sql query
			insertStmt.executeUpdate();
			
			// keys automatically generated by executed query
			results = insertStmt.getGeneratedKeys();
			
			// Set ID to generated student ID
			if (results != null && results.next()) {
				ID = results.getInt(1);
			}
		} 
		catch (Exception e) {
			System.out.println("Error: "+e.getMessage());
			e.printStackTrace();
		}
		finally {
			if (results != null) {
				results.close();
			}
			if (insertStmt != null) {
				insertStmt.close();
			}
			if (sqlConnect != null) {
				sqlConnect.close();
			}
		}
		return ID;
		
	}
	
	// READ -> GET ALL USERS, RETURN A LIST OF USERS
	public ArrayList<Student> getStudents() throws SQLException, ClassNotFoundException, IOException {
		// Create an instance of the mariaDB connection
		MariaDBConnection mariaDB = new MariaDBConnection();
		
		// Declare variables needed to manage connection and read data
		ArrayList<Student> studentList = new ArrayList<>();
		Connection sqlConnect = null;
		String studentQuery = null;
		Statement newQuery = null;
		ResultSet results = null;
		Student student = null;
		
		// SQL query to be run to receive data from SQL table
		studentQuery = "SELECT * FROM Students";
		
		try {
			sqlConnect = mariaDB.getConnection();
			
			// Statement needed to run the sql query
			newQuery = sqlConnect.createStatement();
			
			// run the sql query and return the results to a ResultSet variable
			results = newQuery.executeQuery(studentQuery);
			
			// iterate through the java result set and set student properties from ArrayList properties
			while (results.next())
			{
				student = new Student();
				student.setStudentId(results.getInt("student_id"));
				student.setName(results.getString("name"));
				student.setEmail(results.getString("email"));
				student.setCourseSelected(results.getString("course_selected"));
				studentList.add(student);
				System.out.println(student.toString());
			}
		} 
		catch (ClassNotFoundException | IOException | SQLException e)
		{
			System.out.println("Error: " + e.getMessage());
			e.getStackTrace();
		}
		finally
		{
			if (results != null) {
				results.close();
			}
			if (newQuery != null) {
				newQuery.close();
			}
			if (sqlConnect != null) {
				sqlConnect.close();
			}
		}
		
		return studentList;
	}

	// UPDATE -> UPDATE STUDENT PROPERTIES FOR GIVEN STUDENT
	public Boolean updateStudent(Student student) throws SQLException, ClassNotFoundException, IOException {
			// Declare variables
			Connection conn = null;
			PreparedStatement stmt = null;
			Integer updateResult = null;
			
			// Assign update string to variable
			String updateString = "UPDATE students "
					+ "set name = ?, email = ? course = ?"
					+ "where student_id = ?";
			
			// Create MySqlConnection class instance
			MariaDBConnection mariaDB = new MariaDBConnection();
			
			// Begin try/catch block to query the database
			try
			{
				// Connect to database and assign query string to PreparedStatement object
				conn = mariaDB.getConnection();
				stmt = conn.prepareStatement(updateString);
				
				// Set query parameters (?)
				stmt.setString(1, student.getName());
				stmt.setString(2, student.getEmail());
				stmt.setString(3, student.getCourseSelected());
				stmt.setInt(4, student.getStudentId());
				
				// Run query and assign to ResultSet
				updateResult = stmt.executeUpdate();
			}
			catch (ClassNotFoundException | SQLException e)
			{
				System.out.println("Error: " + e.getMessage());
			}
			finally
			{
				if (stmt != null) {
					stmt.close();
				}
				if (conn != null) {
					conn.close();
				}
			}
			if (updateResult > 0) {
				return true;
			}
			return false;
	}
	
	// DELETE -> REMOVE STUDENT FROM DATA BASE BY STUDENT ID
	public Boolean deleteStudent(int studentID) throws SQLException, ClassNotFoundException, IOException {
		// Create an instance of the mariaDB connection
		MariaDBConnection mariaDB = new MariaDBConnection();
		
		// Declare variables needed to manage connection and read data
		Connection sqlConnect = null;
		PreparedStatement removeStmt = null;
		int results = -1;
		String removeQuery = null;
		
		// SQL query to be run to add student data to SQL table
		removeQuery = "DELETE FROM students where student_id = ?";
				
			
		try {
			sqlConnect = mariaDB.getConnection();
			
			// Statement needed to run the sql query
			removeStmt = sqlConnect.prepareStatement(removeQuery);

			// Set parameters for the prepared statement
			removeStmt.setInt(1, studentID);
			
			// run the sql query 
			results = removeStmt.executeUpdate();
			// Returns: either (1) the row count for SQL Data Manipulation Language (DML) statements or 
			// (2) 0 for SQL statements that return nothing
			
		} 
		catch (ClassNotFoundException | SQLException e)
		{
			System.out.println("Error: " + e.getMessage());
			e.printStackTrace();
		}
		finally {
			if (removeStmt != null) {
				removeStmt.close();
			}
			if (sqlConnect != null) {
				sqlConnect.close();
			}
		}
		if (results >0) {
			return false;
		}
		return true;
	}
		
	public static void main(String[] args) throws SQLException, ClassNotFoundException, IOException {	
		StudentDAO s_dao = new StudentDAO();
		s_dao.testConnection();
		
		/* Add Students to the table */
//		Student studentOne = new Student("Derrick", "derrick@school..com", "Physics");
//		Student studentTwo = new Student("Mimi", "mimi@school.com", "CompSci");
//		Student studentThree = new Student("Chris", "chris@school.com", "Data Structures");
//
//		studentOne.setStudentId(s_dao.createStudent(studentOne));
//		studentTwo.setStudentId(s_dao.createStudent(studentTwo));
//		studentThree.setStudentId(s_dao.createStudent(studentThree));
		
//		List<Student> allStudents = s_dao.getStudents();
//		for (Student student: allStudents) {
//			System.out.println(student.toString());
//		}
		
//		s_dao.deleteStudent(1);
//		s_dao.getStudents();
		

	}
 
}
